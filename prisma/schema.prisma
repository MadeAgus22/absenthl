// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(cuid())
  name         String
  username     String       @unique
  email        String       @unique
  password     String
  role         String       @default("user") // "user" or "admin"
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  attendances  Attendance[]
}

model Attendance {
  id                    String    @id @default(cuid())
  date                  DateTime @db.Date
  shift                 String // "Reguler", "Pagi", "Siang", "Malam"
  checkInTime          DateTime  @db.Timestamptz(3)
  checkOutTime         DateTime? @db.Timestamptz(3)
  attendanceSheetPhoto  String?   // URL dari Vercel Blob
  selfiePhoto           String?   // URL dari Vercel Blob
  checkInStatus         String
  checkOutStatus        String?
  checkOutSelfiePhoto   String? 
  
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  logbook               LogbookEntry[]

  @@index([userId, date])
}

// Model LogbookEntry yang BARU
model LogbookEntry {
  id             String     @id @default(cuid())
  location       String     // <-- Kolom Baru: Lokasi/Gedung
  division       String     // <-- Kolom Baru: Divisi/Ruangan
  personAssisted String     // <-- Kolom Baru: Yang Dibantu
  activity       String     // <-- Kolom Baru: Aktifitas
  createdAt      DateTime   @default(now()) // <-- Timestamp saat dibuat
  updatedAt      DateTime   @updatedAt // <-- Timestamp saat diubah

  attendanceId String
  attendance   Attendance @relation(fields: [attendanceId], references: [id], onDelete: Cascade)
}

// Model untuk pengaturan aplikasi
model AppSettings {
  id                           String @id @default("singleton") // Hanya akan ada satu baris data
  allowEmployeeDashboardAccess Boolean @default(true)
  allowEmployeeViewAllRecords  Boolean @default(false)
  requirePhotoForCheckIn       Boolean @default(true)
  allowLogbookEdit             Boolean @default(true)
}

// Model untuk pengaturan waktu shift
model TimeSettings {
  id                String @id @default(cuid())
  shiftName         String @unique // "Reguler", "Pagi", "Siang", "Malam"
  checkInStart      String // "HH:mm"
  checkInEnd        String // "HH:mm"
  checkOutStart     String // "HH:mm"
  checkOutEnd       String // "HH:mm"
  overtimeThreshold String // "HH:mm"
}